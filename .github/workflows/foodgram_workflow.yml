name: CI for Foodgram

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Test with pytest
      run: pytest ./tests/
  
  build_push_backend_to_DockerHub:
    name: Building back image and pushing it to Docker Hub
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push "foodgram/backend" to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: backend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/foodgram_back:latest

  build_push_frontend_to_DockerHub:
    name: Building front image and pushing it to Docker Hub
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push "foodgram/frontend" to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: frontend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/foodgram_front:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - tests
      - build_push_backend_to_DockerHub
      - build_push_frontend_to_DockerHub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_front
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_back
            sudo docker-compose stop
            sudo docker-compose rm backend
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DJ_SECRET_KEY=${{ secrets.DJ_SECRET_KEY }} >> .env
            sudo docker-compose up -d          

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!

